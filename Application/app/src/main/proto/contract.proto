syntax = "proto3";
package com.grpc;

message Auth {
    string username = 1;
    string password = 2;
}

message Signature {
    bytes signature = 1;
}

message Profile {
    string status = 1;
    repeated string constraints = 2;
}

message MenuItem {
    string name = 1;
    double price = 2;
    string description = 3;
    string foodType = 4;
}

message RegisterRequest {
    Auth auth = 1;
}

message RegisterResponse {
    Signature signature = 1;
    string code = 2;
}

message SaveProfileRequest {
    Auth auth = 1;
    Profile profile = 2;
}

message SaveProfileResponse {
    Signature signature = 1;
    string code = 2;
}

message FetchProfileRequest {
    Auth auth = 1;
}

message FetchProfileResponse {
    Signature signature = 1;
    string code = 2;
    Profile profile = 3;
}

message SaveMenuItemRequest {
    int32 foodServiceId = 1;
    MenuItem menuItem = 2;
}

message SaveMenuItemResponse {
    Signature signature = 1;
    string code = 2;
}

message FetchMenusRequest {
    int32 foodServiceId = 1;
}

message FetchMenusResponse {
    Signature signature = 1;
    repeated MenuItem menuItems = 2;
}

message JoinQueueRequest {
    int32 foodServiceId = 1;
}

message JoinQueueResponse {
    Signature signature = 1;
    int32 userQueueId = 2;
}

message LeaveQueueRequest {
    int32 userQueueId = 1;
    int32 foodServiceId = 2;
    int32 duration = 3;
}

message LeaveQueueResponse {
    Signature signature = 1;
    string result = 2;
}

message EstimateQueueTimeRequest {
    int32 foodServiceId = 1;
}

message EstimateQueueTimeResponse {
    Signature signature = 1;
    int32 time = 2;
}

service GrpcService {
    rpc register (RegisterRequest) returns (RegisterResponse);
    rpc saveProfile (SaveProfileRequest) returns (SaveProfileResponse);
    rpc fetchProfile (FetchProfileRequest) returns (FetchProfileResponse);
    rpc saveMenuItem (SaveMenuItemRequest) returns (SaveMenuItemResponse);
    rpc fetchMenus (FetchMenusRequest) returns (FetchMenusResponse);
    rpc joinQueue (JoinQueueRequest) returns (JoinQueueResponse);
    rpc leaveQueue (LeaveQueueRequest) returns (LeaveQueueResponse);
    rpc estimateQueueTime (EstimateQueueTimeRequest) returns (EstimateQueueTimeResponse);
}
